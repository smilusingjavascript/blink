Test to make sure text-decoration-style property returns CSSPrimitiveValue properly.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


Ancestor should not inherit 'dashed' value from parent (fallback to initial 'solid' value):
PASS e.style.getPropertyCSSValue('text-decoration-style') is null
PASS computedStyle.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSPrimitiveValue]'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').cssText is 'solid'
PASS computedStyle.textDecorationStyle is 'solid'

Parent should cointain 'dashed':
PASS e.style.textDecorationStyle is 'dashed'
PASS e.style.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSPrimitiveValue]'
PASS e.style.getPropertyCSSValue('text-decoration-style').cssText is 'dashed'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSPrimitiveValue]'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').cssText is 'dashed'
PASS computedStyle.textDecorationStyle is 'dashed'

JavaScript setter tests for valid, initial, invalid and blank values:
PASS e.style.getPropertyCSSValue('text-decoration-style') is null

Valid value 'solid':
PASS e.style.textDecorationStyle is 'solid'
PASS e.style.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSPrimitiveValue]'
PASS e.style.getPropertyCSSValue('text-decoration-style').cssText is 'solid'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSPrimitiveValue]'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').cssText is 'solid'
PASS computedStyle.textDecorationStyle is 'solid'

Valid value 'double':
PASS e.style.textDecorationStyle is 'double'
PASS e.style.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSPrimitiveValue]'
PASS e.style.getPropertyCSSValue('text-decoration-style').cssText is 'double'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSPrimitiveValue]'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').cssText is 'double'
PASS computedStyle.textDecorationStyle is 'double'

Valid value 'dotted':
PASS e.style.textDecorationStyle is 'dotted'
PASS e.style.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSPrimitiveValue]'
PASS e.style.getPropertyCSSValue('text-decoration-style').cssText is 'dotted'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSPrimitiveValue]'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').cssText is 'dotted'
PASS computedStyle.textDecorationStyle is 'dotted'

Valid value 'dashed':
PASS e.style.textDecorationStyle is 'dashed'
PASS e.style.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSPrimitiveValue]'
PASS e.style.getPropertyCSSValue('text-decoration-style').cssText is 'dashed'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSPrimitiveValue]'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').cssText is 'dashed'
PASS computedStyle.textDecorationStyle is 'dashed'

Valid value 'wavy':
PASS e.style.textDecorationStyle is 'wavy'
PASS e.style.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSPrimitiveValue]'
PASS e.style.getPropertyCSSValue('text-decoration-style').cssText is 'wavy'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSPrimitiveValue]'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').cssText is 'wavy'
PASS computedStyle.textDecorationStyle is 'wavy'

Initial value:
PASS e.style.textDecorationStyle is 'initial'
PASS e.style.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSValue]'
PASS e.style.getPropertyCSSValue('text-decoration-style').cssText is 'initial'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSPrimitiveValue]'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').cssText is 'solid'
PASS computedStyle.textDecorationStyle is 'solid'

Invalid value (this property accepts one value at a time only):
PASS e.style.textDecorationStyle is 'initial'
PASS e.style.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSValue]'
PASS e.style.getPropertyCSSValue('text-decoration-style').cssText is 'initial'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSPrimitiveValue]'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').cssText is 'solid'
PASS computedStyle.textDecorationStyle is 'solid'

Invalid value (ie. 'unknown'):
PASS e.style.textDecorationStyle is 'initial'
PASS e.style.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSValue]'
PASS e.style.getPropertyCSSValue('text-decoration-style').cssText is 'initial'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSPrimitiveValue]'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').cssText is 'solid'
PASS computedStyle.textDecorationStyle is 'solid'

Empty value (resets the property):
PASS e.style.getPropertyCSSValue('text-decoration-style') is null
PASS computedStyle.getPropertyCSSValue('text-decoration-style').toString() is '[object CSSPrimitiveValue]'
PASS computedStyle.getPropertyCSSValue('text-decoration-style').cssText is 'solid'
PASS computedStyle.textDecorationStyle is 'solid'

PASS successfullyParsed is true

TEST COMPLETE

