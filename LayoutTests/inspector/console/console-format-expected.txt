CONSOLE MESSAGE: line 26: test,test2,,,test4,,,,,
CONSOLE MESSAGE: line 27: %o
CONSOLE MESSAGE: line 28: %O
CONSOLE MESSAGE: line 29: Test for zero "%f" in formatter
CONSOLE MESSAGE: line 30: %% self-escape1
CONSOLE MESSAGE: line 31: %%s self-escape2
CONSOLE MESSAGE: line 32: %%ss self-escape3
CONSOLE MESSAGE: line 33: %%s%s%%s self-escape4
CONSOLE MESSAGE: line 34: %%%%% self-escape5
CONSOLE MESSAGE: line 35: %%%s self-escape6
CONSOLE MESSAGE: line 12: /^url\(\s*(?:(?:"(?:[^\\\"]|(?:\\[\da-f]{1,6}\s?|\.))*"|'(?:[^\\\']|(?:\\[\da-f]{1,6}\s?|\.))*')|(?:[!#$%&*-~\w]|(?:\\[\da-f]{1,6}\s?|\.))*)\s*\)/i
CONSOLE MESSAGE: line 13: /^url\(\s*(?:(?:"(?:[^\\\"]|(?:\\[\da-f]{1,6}\s?|\.))*"|'(?:[^\\\']|(?:\\[\da-f]{1,6}\s?|\.))*')|(?:[!#$%&*-~\w]|(?:\\[\da-f]{1,6}\s?|\.))*)\s*\)/i
CONSOLE MESSAGE: line 12: /foo\\bar\sbaz/i
CONSOLE MESSAGE: line 13: /foo\\bar\sbaz/i
CONSOLE MESSAGE: line 12: test
CONSOLE MESSAGE: line 13: test
CONSOLE MESSAGE: line 12: test named "test"
CONSOLE MESSAGE: line 13: test named "test"
CONSOLE MESSAGE: line 12: Error
CONSOLE MESSAGE: line 13: Error
CONSOLE MESSAGE: line 12: Error: my error message
CONSOLE MESSAGE: line 13: Error: my error message
CONSOLE MESSAGE: line 12: [object HTMLParagraphElement]
CONSOLE MESSAGE: line 13: [object HTMLParagraphElement]
CONSOLE MESSAGE: line 12: function () { return 1; }
CONSOLE MESSAGE: line 13: function () { return 1; }
CONSOLE MESSAGE: line 12: function () {
        return 2;
    }
CONSOLE MESSAGE: line 13: function () {
        return 2;
    }
CONSOLE MESSAGE: line 12: 0.12
CONSOLE MESSAGE: line 13: 0.12
CONSOLE MESSAGE: line 12: http://webkit.org/
CONSOLE MESSAGE: line 13: http://webkit.org/
CONSOLE MESSAGE: line 12: null
CONSOLE MESSAGE: line 13: 
CONSOLE MESSAGE: line 12: undefined
CONSOLE MESSAGE: line 13: 
CONSOLE MESSAGE: line 12: [object Attr]
CONSOLE MESSAGE: line 13: [object Attr]
CONSOLE MESSAGE: line 12: [object Attr]
CONSOLE MESSAGE: line 13: [object Attr]
CONSOLE MESSAGE: line 12: [object Attr]
CONSOLE MESSAGE: line 13: [object Attr]
CONSOLE MESSAGE: line 12: [object Object]
CONSOLE MESSAGE: line 13: [object Object]
CONSOLE MESSAGE: line 12: NaN
CONSOLE MESSAGE: line 13: NaN
CONSOLE MESSAGE: line 12: Infinity
CONSOLE MESSAGE: line 13: Infinity
CONSOLE MESSAGE: line 12: -Infinity
CONSOLE MESSAGE: line 13: -Infinity
CONSOLE MESSAGE: line 12: test,test2,,,test4,,,,,
CONSOLE MESSAGE: line 13: test,test2,,,test4,,,,,
CONSOLE MESSAGE: line 12: [object Object]
CONSOLE MESSAGE: line 13: [object Object]
CONSOLE MESSAGE: line 12: function () {}
CONSOLE MESSAGE: line 13: function () {}
CONSOLE MESSAGE: line 12: [object Object]
CONSOLE MESSAGE: line 13: [object Object]
CONSOLE MESSAGE: line 12: [object SVGSVGElement]
CONSOLE MESSAGE: line 13: [object SVGSVGElement]
CONSOLE MESSAGE: line 12: [object Object]
CONSOLE MESSAGE: line 13: [object Object]
CONSOLE MESSAGE: line 12: 0
CONSOLE MESSAGE: line 13: 0
CONSOLE MESSAGE: line 12: [object Object]
CONSOLE MESSAGE: line 13: [object Object]
CONSOLE MESSAGE: line 12: function Object() { [native code] }
CONSOLE MESSAGE: line 13: function Object() { [native code] }
CONSOLE MESSAGE: line 12: [object Object]
CONSOLE MESSAGE: line 13: [object Object]
CONSOLE MESSAGE: line 12: function () {}
CONSOLE MESSAGE: line 13: function () {}
CONSOLE MESSAGE: line 12: 42
CONSOLE MESSAGE: line 13: 42
CONSOLE MESSAGE: line 12: abc
CONSOLE MESSAGE: line 13: abc
CONSOLE MESSAGE: line 12: [object Uint16Array]
CONSOLE MESSAGE: line 13: [object Uint16Array]
CONSOLE MESSAGE: line 12: [object Text]
CONSOLE MESSAGE: line 13: [object Text]
CONSOLE MESSAGE: line 12: [object DOMException]
CONSOLE MESSAGE: line 13: [object DOMException]
Tests that console logging dumps proper messages.

 console-format.html:26 Array[10]0: "test"1: "test2"4: "test4"foo: Objectlength: 10__proto__: Array[0]
console-format.html:27 Array[10]0: "test"1: "test2"4: "test4"foo: Objectlength: 10__proto__: Array[0]
console-format.html:28 Array[10]0: "test"1: "test2"4: "test4"foo: Objectlength: 10__proto__: Array[0]
console-format.html:29 Test for zero "0" in formatter
console-format.html:30 % self-escape1 dummy
console-format.html:31 %s self-escape2 dummy
console-format.html:32 %ss self-escape3 dummy
console-format.html:33 %sdummy%s self-escape4
console-format.html:34 %%% self-escape5 dummy
console-format.html:35 %dummy self-escape6
console-format.html:12 /^url\(\s*(?:(?:"(?:[^\\\"]|(?:\\[\da-f]{1,6}\s?|\.))*"|'(?:[^\\\']|(?:\\[\da-f]{1,6}\s?|\.))*')|(?:[!#$%&*-~\w]|(?:\\[\da-f]{1,6}\s?|\.))*)\s*\)/i
console-format.html:13 [/^url\(\s*(?:(?:"(?:[^\\\"]|(?:\\[\da-f]{1,6}\s?|\…?:[!#$%&*-~\w]|(?:\\[\da-f]{1,6}\s?|\.))*)\s*\)/i]0: /^url\(\s*(?:(?:"(?:[^\\\"]|(?:\\[\da-f]{1,6}\s?|\.))*"|'(?:[^\\\']|(?:\\[\da-f]{1,6}\s?|\.))*')|(?:[!#$%&*-~\w]|(?:\\[\da-f]{1,6}\s?|\.))*)\s*\)/ilength: 1__proto__: Array[0]
globals[0]
/^url\(\s*(?:(?:"(?:[^\\\"]|(?:\\[\da-f]{1,6}\s?|\.))*"|'(?:[^\\\']|(?:\\[\da-f]{1,6}\s?|\.))*')|(?:[!#$%&*-~\w]|(?:\\[\da-f]{1,6}\s?|\.))*)\s*\)/i
console-format.html:12 /foo\\bar\sbaz/i
console-format.html:13 [/foo\\bar\sbaz/i]0: /foo\\bar\sbaz/ilength: 1__proto__: Array[0]
globals[1]
/foo\\bar\sbaz/i
console-format.html:12 test
console-format.html:13 ["test"]
globals[2]
"test"
console-format.html:12 test named "test"
console-format.html:13 ["test named "test""]
globals[3]
"test named "test""
console-format.html:12 Error {stack: (...)}stack: (...)get stack: function () { [native code] }set stack: function () { [native code] }__proto__: d
console-format.html:13 [Error]0: Errorlength: 1__proto__: Array[0]
globals[4]
Error {stack: (...)}stack: (...)get stack: function () { [native code] }set stack: function () { [native code] }__proto__: d
console-format.html:12 Error: my error message {stack: (...), message: "my error message"}message: "my error message"stack: (...)get stack: function () { [native code] }set stack: function () { [native code] }__proto__: d
console-format.html:13 [Error: my error message]0: Error: my error messagelength: 1__proto__: Array[0]
globals[5]
Error: my error message {stack: (...), message: "my error message"}message: "my error message"stack: (...)get stack: function () { [native code] }set stack: function () { [native code] }__proto__: d
console-format.html:12 <p id="p">Tests that console logging dumps proper messages.</p>
console-format.html:13 [p#p]0: p#plength: 1__proto__: Array[0]
globals[6]
<p id="p">Tests that console logging dumps proper messages.</p>
console-format.html:12 function () { return 1; }
console-format.html:13 [function]0: function () { return 1; }length: 1__proto__: Array[0]
globals[7]
console-format.html:45 function () { return 1; }
console-format.html:12 function () {
        return 2;
    }
console-format.html:13 [function]0: function () {length: 1__proto__: Array[0]
globals[8]
console-format.html:46 function () {
        return 2;
    }
console-format.html:12 0.12
console-format.html:13 [0.12]
globals[9]
0.12
console-format.html:12 http://webkit.org/
console-format.html:13 ["http://webkit.org/"]
globals[10]
"http://webkit.org/"
console-format.html:12 null
console-format.html:13 [null]
globals[11]
null
console-format.html:12 undefined
console-format.html:13 [undefined]
globals[12]
undefined
console-format.html:12 attr=""
console-format.html:13 [attr]0: attrlength: 1__proto__: Array[0]
globals[13]
attr=""
console-format.html:12 attr="value""value"
console-format.html:13 [attr]0: attrlength: 1__proto__: Array[0]
globals[14]
attr="value""value"
console-format.html:12 id="x""x"
console-format.html:13 [id]0: idlength: 1__proto__: Array[0]
globals[15]
id="x""x"
console-format.html:12 Object {length: (...)}length: (...)get length: function length() { throw "Length called"; }__proto__: Object
console-format.html:13 [Object]0: Objectlength: 1__proto__: Array[0]
globals[16]
Object {length: (...)}length: (...)get length: function length() { throw "Length called"; }__proto__: Object
console-format.html:12 NaN
console-format.html:13 [NaN]
globals[17]
NaN
console-format.html:12 Infinity
console-format.html:13 [Infinity]
globals[18]
Infinity
console-format.html:12 -Infinity
console-format.html:13 [-Infinity]
globals[19]
-Infinity
console-format.html:12 ["test", "test2", 4: "test4", foo: Object]0: "test"1: "test2"4: "test4"foo: Objectlength: 10__proto__: Array[0]
console-format.html:13 [Array[10]]0: Array[10]length: 1__proto__: Array[0]
globals[20]
["test", "test2", undefined × 2, "test4", undefined × 5]
console-format.html:12 Object {}
console-format.html:13 [Object]0: Objectlength: 1__proto__: Array[0]
globals[21]
Object {}
console-format.html:12 [function]0: function () {}length: 1__proto__: Array[0]
console-format.html:13 [Array[1]]0: Array[1]length: 1__proto__: Array[0]
globals[22]
[function () {}]
console-format.html:12 Object {bar: "bar", foo: "foo"}
console-format.html:13 [Object]0: Objectlength: 1__proto__: Array[0]
globals[23]
Object {bar: "bar", foo: "foo"}
console-format.html:12 <svg id="svg-node"></svg>
console-format.html:13 [svg#svg-node]0: svg#svg-nodelength: 1__proto__: Array[0]
globals[24]
<svg id="svg-node"></svg>
console-format.html:12 Object {bar: (...), foo: 1}bar: (...)get bar: function () { return this.bar; }set bar: function (x) { this.bar = x; }getFoo: function () { return this.foo; }__proto__: Object
console-format.html:13 [Object]0: Objectlength: 1__proto__: Array[0]
globals[25]
Object {bar: (...), foo: 1}bar: (...)get bar: function () { return this.bar; }set bar: function (x) { this.bar = x; }getFoo: function () { return this.foo; }__proto__: Object
console-format.html:12 -0
console-format.html:13 [-0]
globals[26]
-0
console-format.html:12 Object {}
console-format.html:13 [Object]0: Objectlength: 1__proto__: Array[0]
globals[27]
Object {}
console-format.html:12 function Object() { [native code] }
console-format.html:13 [function]0: function Object() { [native code] }length: 1__proto__: Array[0]
globals[28]
function Object() { [native code] }
console-format.html:12 Object {}
console-format.html:13 [Object]0: Objectlength: 1__proto__: Array[0]
globals[29]
Object {}
console-format.html:12 function () {}
console-format.html:13 [function]0: function () {}length: 1__proto__: Array[0]
globals[30]
console-format.html:62 function () {}
console-format.html:12 Number {[[PrimitiveValue]]: 42}
console-format.html:13 [Number]0: Numberlength: 1__proto__: Array[0]
globals[31]
Number {[[PrimitiveValue]]: 42}
console-format.html:12 String {0: "a", 1: "b", 2: "c", length: 3, [[PrimitiveValue]]: "abc"}
console-format.html:13 [String]0: Stringlength: 1__proto__: Array[0]
globals[32]
String {0: "a", 1: "b", 2: "c", length: 3, [[PrimitiveValue]]: "abc"}
console-format.html:12 [1, 2, 3]
console-format.html:13 [Uint16Array[3]]0: Uint16Array[3]length: 1__proto__: Array[0]
globals[33]
[1, 2, 3]
console-format.html:12 #text
console-format.html:13 [text]0: textlength: 1__proto__: Array[0]
globals[34]
#text
console-format.html:12 DOMException: Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node. {message: "Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.", name: "NotFoundError", code: 8, stack: "", INDEX_SIZE_ERR: 1…}code: 8message: "Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node."name: "NotFoundError"stack: ""__proto__: DOMException
console-format.html:13 [DOMException: Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of th…]0: DOMException: Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.length: 1__proto__: Array[0]
globals[35]
DOMException: Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node. {message: "Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.", name: "NotFoundError", code: 8, stack: "", INDEX_SIZE_ERR: 1…}code: 8message: "Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node."name: "NotFoundError"stack: ""__proto__: DOMException

