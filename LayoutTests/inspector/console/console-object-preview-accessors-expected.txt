CONSOLE MESSAGE: line 2: [object Object]
CONSOLE MESSAGE: line 2: [object Object]
CONSOLE MESSAGE: line 2: [object Object],[object Object]
CONSOLE MESSAGE: line 2: [object Object]
Tests that console produces instant previews for arrays and objects that have getters and setters.

Before expanding accessors:
arrayLikeWithAccessors
console.log(arrayLikeWithAccessors)
objectWithAccessors
console.log(objectWithAccessors)
console.table(tableObject)
console.dir(objectWithAccessors)
[(...), (...), undefined × 2, Objectbar: 2foo: 1__proto__: Object, (...), Array[2]0: 11: 2length: 2__proto__: Array[0], (...), "value8", (...)]
VM:2 [(...), (...), 3: (...), 4: Object, 5: (...), 6: Array[2], 7: (...), 8: "value8", 9: (...), splice: function]0: (...)get 0: function 0() { foo.bar = 1; }1: (...)get 1: function 1() { throw new Error("arrayLikeWithAccessors"); }set 3: function 3(_) {}4: Object5: (...)get 5: function 5() { return {afoo: 3, abar: 4}; }6: Array[2]7: (...)get 7: function 7() { return [3, 4]; }8: "value8"9: (...)get 9: function 9() { return NaN; }length: 10splice: function () {}__proto__: Object
undefined
Object {0: (...), 1: (...), 3: (...), 4: Object, 5: (...), 6: Array[2], 7: (...), 8: function, 9: (...)}0: (...)get 0: function 0() { baz.baz = 3; }1: (...)get 1: function 1() { throw new Error("objectWithAccessors"); }set 3: function 3(_) {}4: Object5: (...)get 5: function 5() { return {afoo: 3, abar: 4}; }6: Array[2]7: (...)get 7: function 7() { return [3, 4]; }8: function func8() {}9: (...)get 9: function 9() { return -Infinity; }__proto__: Object
VM:2 Object {0: (...), 1: (...), 3: (...), 4: Object, 5: (...), 6: Array[2], 7: (...), 8: function, 9: (...)}0: (...)get 0: function 0() { baz.baz = 3; }1: (...)get 1: function 1() { throw new Error("objectWithAccessors"); }set 3: function 3(_) {}4: Object5: (...)get 5: function 5() { return {afoo: 3, abar: 4}; }6: Array[2]7: (...)get 7: function 7() { return [3, 4]; }8: function func8() {}9: (...)get 9: function 9() { return -Infinity; }__proto__: Object
undefined
HEADER (index) | 0 | 1 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | splice | 
ROW (...) | (...) | (...) | Object | (...) | Array[2] | (...) | "value8" | (...) | function | 
ROW (...) | (...) | (...) | Object | (...) | Array[2] | (...) | function | (...) | 
undefined
VM:2 Object0: (...)get 0: function 0() { baz.baz = 3; }1: (...)get 1: function 1() { throw new Error("objectWithAccessors"); }set 3: function 3(_) {}4: Object5: (...)get 5: function 5() { return {afoo: 3, abar: 4}; }6: Array[2]7: (...)get 7: function 7() { return [3, 4]; }8: function func8() {}9: (...)get 9: function 9() { return -Infinity; }__proto__: Object
undefined

Accessor property buttons count: 55

After expanding accessors:
arrayLikeWithAccessors
console.log(arrayLikeWithAccessors)
objectWithAccessors
console.log(objectWithAccessors)
console.table(tableObject)
console.dir(objectWithAccessors)
[<exception>, <exception>, undefined × 2, Objectbar: 2foo: 1__proto__: Object, Object, Array[2]0: 11: 2length: 2__proto__: Array[0], Array[2], "value8", NaN]
VM:2 [<exception>, <exception>, 3: undefined, 4: Object, 5: Object, 6: Array[2], 7: Array[2], 8: "value8", 9: NaN, splice: function]0: [Exception: ReferenceError: foo is not defined]get 0: function 0() { foo.bar = 1; }1: [Exception: Error: arrayLikeWithAccessors]get 1: function 1() { throw new Error("arrayLikeWithAccessors"); }set 3: function 3(_) {}4: Object5: Objectget 5: function 5() { return {afoo: 3, abar: 4}; }6: Array[2]7: Array[2]get 7: function 7() { return [3, 4]; }8: "value8"9: NaNget 9: function 9() { return NaN; }length: 10splice: function () {}__proto__: Object
undefined
Object {0: <exception>, 1: <exception>, 3: undefined, 4: Object, 5: Object, 6: Array[2], 7: Array[2], 8: function, 9: -Infinity}0: [Exception: ReferenceError: baz is not defined]get 0: function 0() { baz.baz = 3; }1: [Exception: Error: objectWithAccessors]get 1: function 1() { throw new Error("objectWithAccessors"); }set 3: function 3(_) {}4: Object5: Objectget 5: function 5() { return {afoo: 3, abar: 4}; }6: Array[2]7: Array[2]get 7: function 7() { return [3, 4]; }8: function func8() {}9: -Infinityget 9: function 9() { return -Infinity; }__proto__: Object
VM:2 Object {0: <exception>, 1: <exception>, 3: undefined, 4: Object, 5: Object, 6: Array[2], 7: Array[2], 8: function, 9: -Infinity}0: [Exception: ReferenceError: baz is not defined]get 0: function 0() { baz.baz = 3; }1: [Exception: Error: objectWithAccessors]get 1: function 1() { throw new Error("objectWithAccessors"); }set 3: function 3(_) {}4: Object5: Objectget 5: function 5() { return {afoo: 3, abar: 4}; }6: Array[2]7: Array[2]get 7: function 7() { return [3, 4]; }8: function func8() {}9: -Infinityget 9: function 9() { return -Infinity; }__proto__: Object
undefined
HEADER (index) | 0 | 1 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | splice | 
ROW <exception> | <exception> | undefined | Object | Object | Array[2] | Array[2] | "value8" | NaN | function | 
ROW <exception> | <exception> | undefined | Object | Object | Array[2] | Array[2] | function | -Infinity | 
undefined
VM:2 Object0: [Exception: ReferenceError: baz is not defined]get 0: function 0() { baz.baz = 3; }1: [Exception: Error: objectWithAccessors]get 1: function 1() { throw new Error("objectWithAccessors"); }set 3: function 3(_) {}4: Object5: Objectget 5: function 5() { return {afoo: 3, abar: 4}; }6: Array[2]7: Array[2]get 7: function 7() { return [3, 4]; }8: function func8() {}9: -Infinityget 9: function 9() { return -Infinity; }__proto__: Object
undefined

